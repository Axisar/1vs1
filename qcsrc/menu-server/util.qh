// returns TRUE if handled, FALSE otherwise
// uses tokenize on its argument!

// unzone the string, and return it as tempstring. Safe to be called on string_null
string fstrunzone(string s);

string fixPriorityList(string pl, float from, float to, float subtract, float complete);
string swapInPriorityList(string order, float i, float j);

float cvar_value_issafe(string s);

void cvar_settemp(string pKey, string pValue);
void cvar_settemp_restore();

typedef void(float i1, float i2, entity pass) swapfunc_t; // is only ever called for i1 < i2
typedef float(float i1, float i2, entity pass) comparefunc_t; // <0 for <, ==0 for ==, >0 for > (like strcmp)
void shuffle(float n, swapfunc_t swap, entity pass);
void heapsort(float n, swapfunc_t swap, comparefunc_t cmp, entity pass);

string swapwords(string str, float i, float j);
string shufflewords(string str);

string substring_range(string s, float b, float e);

string records_reply, lsmaps_reply, maplist_reply; // cached replies
